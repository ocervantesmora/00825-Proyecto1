/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;
import AccesoADatos.CelebracionAD;
import Entidades.Celebracion;
import Utils.Utils;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ocerv
 */
public class EditarCelebracion extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(EditarCelebracion.class.getName());
    private DefaultTableModel modeloTabla;
    private int idSeleccionado = -1;

    /**
     * Creates new form EditarCelebracion
     */
    public EditarCelebracion() {
        initComponents();
        setLocationRelativeTo(null); // PAra que la ventana aparezca en el centro de la pantalla, y no en un punto específico
        configurarTabla();
    }
    
    private void configurarTabla(){
        String[] nombresColumnas = {"ID", "Fecha", "Descripción", "País"};
        modeloTabla = new DefaultTableModel(nombresColumnas, 0) {
            //Convierte las celdas de la tabla en No Editables
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        // Asigna el modelo recién creado a la tabla que va a mostar los datos
        tblResultadosBusqueda.setModel(modeloTabla);
    }
    
    private void cargarDatosEnTabla(){
        modeloTabla.setRowCount(0);
        ArrayList<Celebracion> listaDeCelebraciones = CelebracionAD.consultarCelebraciones();
        Iterator<Celebracion> iterador = listaDeCelebraciones.iterator();
        String textoBuscado = txtBuscarCelebracion.getText().toLowerCase();

        while(iterador.hasNext()){
            Celebracion celebracion = iterador.next();
            if(celebracion.getPais().toLowerCase().contains(textoBuscado)){
                Object[] fila = new Object[4];
                fila[0] = celebracion.getIdDeLaCelebracion();
                fila[1] = celebracion.getFecha();
                fila[2] = celebracion.getDescripcion();
                fila[3] = celebracion.getPais();

                modeloTabla.addRow(fila);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBuscarCelebracion = new javax.swing.JTextField();
        btnBuscarCelebracion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultadosBusqueda = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPais = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jdcFecha = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Celebraciones - Editar");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Editar Celebraciones");
        jLabel1.setToolTipText("");

        btnBuscarCelebracion.setText("Buscar por país");
        btnBuscarCelebracion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarCelebracionMouseClicked(evt);
            }
        });

        tblResultadosBusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblResultadosBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblResultadosBusquedaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblResultadosBusqueda);

        jLabel2.setText("Fecha:");

        jLabel3.setText("Descripción:");

        jLabel4.setText("País:");

        txtDescripcion.setToolTipText("");

        btnGuardar.setText("GUARDAR");
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });

        btnCancelar.setText("VOLVER");
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });

        jdcFecha.setDateFormatString("yyyy-MM-dd");
        jdcFecha.setName("jdcFecha"); // NOI18N
        jdcFecha.setNextFocusableComponent(txtDescripcion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                            .addComponent(txtBuscarCelebracion)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnGuardar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnCancelar))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2))
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtDescripcion)
                                            .addComponent(txtPais, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                            .addComponent(jdcFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(btnBuscarCelebracion, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscarCelebracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarCelebracion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        // TODO add your handling code here:
        EditarCelebracion.this.dispose();
        VentanaPrincipal ventana = new VentanaPrincipal();
        ventana.setVisible(true);
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnBuscarCelebracionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarCelebracionMouseClicked
        // TODO add your handling code here:
        cargarDatosEnTabla();
    }//GEN-LAST:event_btnBuscarCelebracionMouseClicked

    private void tblResultadosBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblResultadosBusquedaMouseClicked
        // TODO add your handling code here:
        int filaSeleccionada = tblResultadosBusqueda.getSelectedRow();
        
        idSeleccionado = (int) modeloTabla.getValueAt(filaSeleccionada,0);
        
        //Cuando se lee la tabla, se obtienen objetos tipo Object. Es necesario convertirlos al
        LocalDate fechaOriginal = (LocalDate) modeloTabla.getValueAt(filaSeleccionada,1); 
        Date fechaSeleccionada = Date.from(fechaOriginal.atStartOfDay(ZoneId.systemDefault()).toInstant());
        jdcFecha.setDate(fechaSeleccionada);
        
        txtDescripcion.setText(modeloTabla.getValueAt(filaSeleccionada,2).toString());
        txtPais.setText(modeloTabla.getValueAt(filaSeleccionada,3).toString());
    }//GEN-LAST:event_tblResultadosBusquedaMouseClicked

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        // TODO add your handling code here:
        
        if(idSeleccionado!= -1) {
            String validar = validarDatos();
            if(Utils.isNullOrWhiteSpace(validar)){
                ArrayList<Celebracion> listaDeCelebraciones = CelebracionAD.consultarCelebraciones();
                Iterator<Celebracion> iterador = listaDeCelebraciones.iterator();
                while(iterador.hasNext()){
                    Celebracion celebracion = iterador.next();
                    if(celebracion.getIdDeLaCelebracion()==idSeleccionado){
                            celebracion.setFecha(jdcFecha.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
                            celebracion.setDescripcion(txtDescripcion.getText());
                            celebracion.setPais(txtPais.getText());
                            break;
                    }
                }
            }
            else {
                JOptionPane.showMessageDialog(this,validar);
            }
        }
        else {
            JOptionPane.showMessageDialog(this,"Debe seleccionar una celebración para poder editarla.");
        }
    }//GEN-LAST:event_btnGuardarMouseClicked

        private String validarDatos(){
        //Método para validar que ninguno de los campos haya quedado vacío
        String validacion = "";
        if(jdcFecha.getDate()==null){
            return "Ingrese una fecha válida.";
        }
        else if(Utils.isNullOrWhiteSpace(txtDescripcion.getText())){
            return "Ingrese una descripción válida.";
        }
        else if(Utils.isNullOrWhiteSpace(txtPais.getText())){
            return "Ingrese un país válido.";
        }
        return validacion;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new EditarCelebracion().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCelebracion;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcFecha;
    private javax.swing.JTable tblResultadosBusqueda;
    private javax.swing.JTextField txtBuscarCelebracion;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtPais;
    // End of variables declaration//GEN-END:variables
}
